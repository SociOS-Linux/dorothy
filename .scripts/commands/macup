#!/usr/bin/env bash
set -e

if test "$1" != "backup" -a "$1" != "restore"; then
	echo "USAGE:"
	echo "BACKUP TO CLOUD: macup backup"
	echo "RESTORE FROM TIME MACHINE: macup restore"
	exit 1
fi

echo "Make sure that Time Machine is configured, or you have the Time Machine Backup Volume mounted. Press any key to continue."
read -r -n 1 -p ''
echo -e '\n'

export warnings="";
export action="$1"
export localRoot="$HOME"
export cloudRoot="$HOME/Library/Mobile Documents/com~apple~CloudDocs/Apps/macup"

export timeBackup="$2";
if is_empty_string "$timeBackup"; then
	echo "Fetching Time Machine backup automatically..."
	timeBackup="$(tmutil latestbackup || exit 0)"
	if ! is_dir "$timeBackup"; then
		echo ''
		echo 'Fetching Time Machine backup manually...'
		echo ''
		echo 'Which volume contains the time machine backups?'
		backupVolume="$(choose-subdir /Volumes)"
		echo ''
		echo 'Which machine has the backups?'
		backupMachine="$(choose-subdir "$backupVolume/Backups.backupdb")"
		timeBackup="$backupMachine/Latest"
	fi
	if ! is_dir "$timeBackup"; then
		echo 'Time Machine backup could not be determined'
		exit 1
	fi
fi

export timeRoot;
if is_dir "$timeBackup/Macintosh HD$HOME"; then
	timeRoot="$timeBackup/Macintosh HD$HOME"
elif is_dir "$timeBackup/System$HOME"; then
	timeRoot="$timeBackup/System$HOME"
elif is_dir "$timeBackup$HOME"; then
	timeRoot="$timeBackup$HOME"
elif is_dir "$(expandpath "$timeBackup/*$HOME")"; then
	timeRoot="$(expandpath "$timeBackup/*$HOME")"
else
	echo "Could not find user directory in time machine backup: $timeBackup"
	exit 1
fi

echo ''
if is_equal "$action" "restore"; then
	echo "Restoring from: $timeRoot"
fi
echo ''
echo 'What would you like to restore?'

function backup {
	echo "backup: $1"
	if is_exists "$localRoot/$1"; then
		sudo rm -Rf "$cloudRoot/$1"
		mkdir -p "$(dirname "$cloudRoot/$1")"
		cp -fpLRv "$localRoot/$1" "$cloudRoot/$1"
	else
		warning="MISSING: $localRoot/$1"
		warnings="$warnings\n$warning"
		echo "$warning"
	fi
}
function restore {
	echo "Restoring: $1"
	if is_exists "$timeRoot/$1"; then
		sudo rm -Rf "$localRoot/$1"
		mkdir -p "$(dirname "$localRoot/$1")"
		if contains_word "$timeRoot" "Time Machine Backups"; then
			tmutil restore -v "$timeRoot/$1" "$localRoot/$1"
		else
			cp -fav "$timeRoot/$1" "$localRoot/$1"
			own "$localRoot/$1"
		fi
	else
		warning="MISSING: $timeRoot/$1"
		warnings="$warnings\n$warning"
		echo "$warning"
	fi
}
function remove {
	echo "Removing: $1"
	sudo rm -Rf "$localRoot/$1"
}
function act {
	if is_equal "$action" "backup"; then
		backup "$1"
	elif is_equal "$action" "restore"; then
		restore "$1"
	fi
}
function process {
	if confirm "$1"; then
		for p in "${@:2}"; do
			act "$p"
		done
	else
		echo "Skipping: $1"
	fi
}

# ===============
# Apple
# todo: dock

process "Apple iTunes" \
	"Media" \
	"Music" \
	"Library/iTunes" \
	"Library/Preferences/com.apple.iPod.plist" \
	"Library/Preferences/com.apple.iTunes.plist"

process "Apple Mail" "Library/Containers/com.apple.mail/Data/Library/Preferences"

if confirm "Apple Messages"; then
	# http://apple.stackexchange.com/a/173940/15131
	remove "Library/Caches/com.apple.iChat"
	act "Library/Preferences/com.apple.sms.plist"
	act "Library/Preferences/com.apple.messaging.expire.plist"
	act "Library/Preferences/com.apple.Messages.plist"
	act "Library/Preferences/com.apple.imessage.plist"
	act "Library/Preferences/com.apple.imessage.bag.plist"
	act "Library/Preferences/com.apple.imdpersistence.IMDPersistenceAgent.plist"
	act "Library/Preferences/com.apple.imdsmsrecordstore.plist"
	act "Library/Preferences/com.apple.imservice.ids.FaceTime.plist"
	act "Library/Preferences/com.apple.imservice.ids.iMessage.plist"
	act "Library/Preferences/com.apple.iChat.AIM.plist"
	act "Library/Preferences/com.apple.iChat.Jabber.plist"
	act "Library/Preferences/com.apple.iChat.StatusMessages.plist"
	act "Library/Preferences/com.apple.iChat.Yahoo.plist"
	act "Library/Preferences/com.apple.iChat.plist"
	act "Library/Messages"
	act "Library/Containers/com.apple.iChat"
	act "Library/Containers/com.apple.messages.MapRenderingService"
	act "Library/Containers/com.apple.messages.ShareExtension"
	act "Library/Containers/com.apple.messages.StorageManagementExtension"
	act "Library/Containers/com.apple.messages.TranscriptRenderingService"
fi

process "Apple Safari History" \
	"Library/Safari/History.db" \
	"Library/Safari/History.db-lock" \
	"Library/Safari/History.db-shm" \
	"Library/Safari/History.db-wal" \
	"Library/Safari/HistoryIndex.sk"

process "Apple Safari Preferences" "Library/Preferences/com.apple.Safari.plist"
process "Apple Saved Searches" "Library/Saved Searches"
process "Apple Stickies" "Library/StickiesDatabase"
process "Apple Terminal" "Library/Preferences/com.apple.Terminal.plist"

# ===============
# Documents

process "Downloads" "Downloads"
process "Projects" "Projects"
process "Virtual Machines" "Virtual Machines"

process "GPG" ".gnupg"
process "SSH" ".ssh"
process "NPM" ".npmrc"
process "Bash History" ".bash_history"
process "Travis" ".travis/config.yml"
process ".scripts/env" ".scripts/env.sh"

# ===============
# Apps
# todo: acorn, adguard, authy, agenda, backblaze, bear, bee, bitcoin.com, gitter, jaikoz, keybase, kindle, ntfs for mac, numi, pastebot, paw, pinstriped, protonvpn, scrumpy, signal, sketch, sunama, things, thoughttrain, transmit, ubersicht, webtorrent, workflowy

process "Acorn" \
	"Library/Application Support/Acorn" \
	"Library/Preferences/com.flyingmeat.Acorn6.plist"

process "Adguard" \
	"Library/Application Support/com.adguard.Adguard" \
	"Library/Preferences/com.adguard.Adguard.plist"

process "Agenda" "Library/Containers/com.momenta.agenda.macos"
process "Amphetamine" "Library/Containers/com.if.Amphetamine"
process "AppZapper" "Library/Preferences/com.appzapper.AppZapper.plist"

process "Audio Hijack" \
	"Library/Application Support/Audio Hijack" \
	"Library/Preferences/com.rogueamoeba.audiohijack3.plist"

process "Authy" "Library/Application Support/Authy Desktop"

process "Base" \
	"Library/Application Support/Base" \
	"Library/Preferences/uk.co.menial.Base.plist"

process "Bartender" "Library/Preferences/com.surteesstudios.Bartender.plist"
process "Bear" "Library/Containers/net.shinyfrog.bear"
process "Bitcoin.com" "Library/Application Support/bitcoin.com"

process "Blockstack" \
	"Library/Application Support/Blockstack" \
	"Library/Preferences/org.blockstack.mac.plist"

process "Boxy" "Library/Containers/com.francescodilorenzo.Mailbro"
process "Brave" "Library/Application Support/brave"

process "Calibre" \
	"Library/Preferences/calibre" \
	"Library/Preferences/net.kovidgoyal.calibre.plist"

process "Context" "Library/Preferences/com.contextsformac.Contexts.plist"

process "Cyberduck" \
	"Library/Containers/ch.sudo.cyberduck" \
	"Library/Preferences/ch.sudo.cyberduck.plist"

process "DevDocs" "Library/Application Support/DevDocs"
process "DiskMap" "Library/Preferences/com.fiplab.diskmap.plist"

process "Donut" \
	"Library/Application Support/Donut" \
	"Library/Preferences/com.harshjv.donut.helper.plist" \
	"Library/Preferences/com.harshjv.donut.plist"

process "Exodus" "Library/Application Support/Exodus"

process "Firefox" \
	"Library/Application Support/Firefox" \
	"Library/Preferences/org.mozilla.firefox.plist"

process "Freedom" "Library/Preferences/com.80pct.FreedomPlatform.plist"

process "Gitter" \
	"Library/Application Support/Gitter" \
	"Library/Preferences/com.troupe.gitter.mac.Gitter.plist"

process "Hazeover" \
	"Library/Application Support/com.pointum.hazeover" \
	"Library/Preferences/com.pointum.hazeover.plist"

process "Jaikoz" "Library/Preferences/Jaikoz"

process "Keybase" \
	"Library/Application Support/Keybase" \
	"Library/Preferences/keybase.Electron.plist" \
	"Library/Preferences/keybase.ElectronHelper.plist"

process "Kindle" "Library/Containers/com.amazon.Kindle"
process "Kodi" "Library/Application Support/Kodi"

process "Little Snitch" \
	"Library/Application Support/Objective Development" \
	"Library/Application Support/Little Snitch" \
	"Library/Preferences/at.obdev.LittleSnitchAgent.plist" \
	"Library/Preferences/at.obdev.LittleSnitchConfiguration.plist" \
	"Library/Preferences/at.obdev.LittleSnitchNetworkMonitor.plist" \
	"Library/Preferences/at.obdev.LittleSnitchSoftwareUpdate.plist"

process "Loopback" \
	"Library/Application Support/Loopback" \
	"Library/Preferences/com.rogueamoeba.Loopback.plist" \
	"Library/Preferences/com.rogueamoeba.loopbackd.plist"

process "Micro Snitch" "Library/Preferences/at.obdev.MicroSnitch.plist"
process "Numi" "Library/Containers/com.dmitrynikolaev.numi.NumiExtension"
process "Opera" "Library/Application Support/com.operasoftware.Opera"
process "Parity" "Library/Application Support/io.parity.ethereum"

process "Pastebot" \
	"Library/Preferences/com.tapbots.Pastebot2Mac.plist" \
	"Library/Containers/com.tapbots.PAstebot2Mac"

process "Paragon NTFS" \
	"Library/Application Support/com.paragon-software.ntfs.fsapp" \
	"Library/Application Support/com.paragon-software.ntfs.notification-agent" \
	"Library/Preferences/com.paragon-software.ntfs.fsapp.plist" \
	"Library/Preferences/com.paragon-software.ntfs.FSMenuApp.plist"

process "Pinstriped" "Library/Application Support/com.pinstriped.pinstriped-mac"

process "Plex" \
	"Library/Application Support/Plex Media Server" \
	"Library/Preferences/com.plexapp.plexmediaserver.plist"

process "ProtonVPN" \
	"Library/Containers/ch.protonvpn.mac" \
	"Library/Containers/ch.protonvpn.ProtonVPNStarter"

process "Screenflow" "Library/Application Support/Telestream"

process "Signal" \
	"Library/Application Support/Signal" \
	"Library/Preferences/org.whispersystems.signal-desktop.helper.plist" \
	"Library/Preferences/org.whispersystems.signal-desktop.plist"

process "Sketch" \
	"Library/Application Support/com.bohemiancoding.sketch3" \
	"Library/Preferences/com.bohemiancoding.sketch3.plist"

process "Skype" \
	"Library/Application Support/Skype" \
	"Library/Application Support/Skype Helper" \
	"Library/Preferences/com.skype.skype.plist"

process "Slack" "Library/Containers/com.tinyspeck.slackmacgap"

process "SoundSource" \
	"Library/Application Support/SoundSource" \
	"Library/Preferences/com.rogueamoeba.soundsource.plist"

process "Spotify" \
	"Library/Application Support/Spotify" \
	"Library/Preferences/com.spotify.client.plist"

process "Spotifree" "Library/Preferences/de.eneas.Spotifree.plist"
process "Teamviewer" "Library/Preferences/com.teamviewer.teamviewer.preferences.plist"
process "Things" "Library/Containers/com.culturedcode.ThingsMac"
process "ThoughtTrain" "Library/Preferences/me.simonarcher.ThoughtTrain.plist"

process "Timing" \
	"Library/Application Support/info.eurocomp.Timing-setapp" \
	"Library/Application Support/info.eurocomp.Timing-setapp.TimingHelper" \
	"Library/Application Support/info.eurocomp.Timing2" \
	"Library/Application Support/info.eurocomp.TimingHelper" \
	"Library/Preferences/info.eurocomp.Timing-setapp.plist" \
	"Library/Preferences/info.eurocomp.Timing-setapp.TimingHelper.fallback.plist" \
	"Library/Preferences/info.eurocomp.Timing-setapp.TimingHelper.plist" \
	"Library/Preferences/info.eurocomp.Timing2.fallback.plist" \
	"Library/Preferences/info.eurocomp.Timing2.plist" \
	"Library/Preferences/info.eurocomp.TimingHelper.fallback.plist" \
	"Library/Preferences/info.eurocomp.TimingHelper.plist"

process "Tower" \
	"Library/Application Support/com.fournova.Tower2" \
	"Library/Preferences/com.fournova.Tower2.plist" \
	"Library/Application Support/com.fournova.Tower3" \
	"Library/Preferences/com.fournova.Tower3.plist"

process "Transmit" \
	"Library/Preferences/com.panic.Transmit.plist" \
	"Library/Application Support/com.panic.Transmit" \
	"Library/Application Support/Transmit"

process "Transmission" \
	"Library/Preferences/org.m0k.transmission.plist" \
	"Library/Application Support/Transmission" \
	".config/transmission"

process "Tunnelblick" \
	"Library/Application Support/Tunnelblick" \
	"Library/Preferences/net.tunnelblick.tunnelblick.plist"

process "Typora" \
	"Library/Application Support/abnerworks.Typora" \
	"Library/Preferences/abnerworks.Typora.plist"

process "The Unarchiver" "Library/Containers/cx.c3.theunarchiver"

process "Ubersicht" \
	"Library/Application Support/tracesOf.Uebersicht" \
	"Library/Application Support/Übersicht"

process "Usage" "Library/Application Support/com.mediaatelier.Usage"
process "Visual Studio Code" "Library/Application Support/Code"

process "VLC" \
	"Library/Application Support/org.videolan.vlc" \
	"Library/Preferences/org.videolan.vlc" \
	"Library/Preferences/org.videolan.vlc.plist"

process "VMware" \
	"Library/Application Support/VMware Fusion" \
	"Library/Preferences/VMware Fusion" \
	"Library/Preferences/com.vmware.fusion.plist" \
	"Library/Preferences/com.vmware.fusionStartMenu.plist"

process "WebTorrent" \
	"Library/Application Support/WebTorrent" \
	"Library/Preferences/io.webtorrent.webtorrent-helper.plist" \
	"Library/Preferences/io.webtorrent.webtorrent.plist"

process "Wire" \
	"Library/Containers/com.wearezeta.zclient.mac" \
	"Library/Preferences/com.wearezeta.zclient.mac.plist"

process "Workflowy" \
	"Library/Application Support/WorkFlowy" \
	"Library/Preferences/com.workflowy.desktop.helper.plist" \
	"Library/Preferences/com.workflowy.desktop.plist"

process "XLD" "Library/Preferences/jp.tmkk.XLD.plist"

process "ZeroNet" "Library/Application Support/ZeroNet"

# ===============
# Post

# Clean
setup-mac-clean

# Finish
if test -z "$warnings"; then
	echo "Completed successfully"
else
	echo -e "Completed with warnings:\n$warnings"
fi
