#!/usr/bin/env bash
set -e

# User
source "$HOME/.scripts/sources/user.sh"

# Setup system node for global installs and vscode on mac
if command_exists brew; then
	echo -e '\nInstalling system node...'
	brew reinstall node
	echo '...system node installed!'
fi

# Configure nvm
if is_dir "$HOME/.nvm"; then
	echo -e '\nUpdating nvm...'
	pushd "$HOME/.nvm"
	git checkout master
	git pull origin master
	popd
	echo '...nvm updated!'
else
	echo -e '\nInstalling nvm...'
	git clone git://github.com/creationix/nvm.git "$HOME/.nvm"
	echo '...nvm installed!'
fi

# Add nvm to the path of this bash script
# prevents the need for a full login shell
source "$HOME/.scripts/sources/nvm.bash"

echo -e '\nInstalling latest nvm node version...'
nvm install node
nvm alias default node
echo '...latest node installed!'

echo -e '\nSwitching back to system node version...'
nvm use system
echo '...success!'

echo -e '\nUpgrading npm...'
npm install -g npm
echo '...upgraded npm!'

# https://github.com/yarnpkg/yarn/issues/2993
if test -n "$NODE_INSTALL"; then
	echo -e '\nInstalling global npm packages...'
	npm install -g "${NODE_INSTALL[@]}"
	echo '...installed global npm packages!'
fi

echo -e '\nConfiguring NPM...'
if test "$(npm config get init.author.name)" = "undefined"; then
	read -r -p "What is your name? " name
	npm config set init.author.name "$name"
fi
if test "$(npm config get init.author.email)" = "undefined"; then
	read -r -p "What is your email? " email
	npm config set init.author.email "$email"
fi
if test "$(npm config get init.author.url)" = "undefined"; then
	read -r -p "What is your url? " url
	npm config set init.author.url "$url"
fi
if test "$(npm config get init.license)" = "undefined"; then
	read -r -p "What license do you prefer? " license
	npm config set init.license "$license"
fi
echo '...configured npm!'