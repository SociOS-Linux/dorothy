#!/usr/bin/env bash
set -e

# Setup system node for global installs and vscode on mac
echo -e "\nInstalling system node..."
if command_exists brew; then
	brew reinstall node
fi

# Configure nvm
if is_dir "$HOME/.nvm"; then
	echo -e "\nUpdating nvm..."
	cd "$HOME/.nvm"
	git checkout master
	git pull origin master
	cd "$HOME"
else
	echo -e "\nInstalling nvm..."
	git clone git://github.com/creationix/nvm.git "$HOME/.nvm"
fi

# Add nvm to the path of this bash script
# prevents the need for a full login shell
source "$HOME/.scripts/sources/nvm.bash"

echo -e "\nInstalling latest nvm node version..."
nvm install node
nvm alias default node

echo -e "\nSwitching back to system node version..."
nvm use system

echo -e "\nUpgrading npm..."
npm install -g npm

# https://github.com/yarnpkg/yarn/issues/2993
echo -e "\nInstall global system npm packages?"
npm install -g \
	bevry-base \
	ci-watch \
	coinmon \
	firebase-tools \
	heroku \
	live-server \
	npm-check-updates \
	serve \
	typescript \
	yarn \
	;

echo -e "\nConfiguring NPM..."
if test "$(npm config get init.author.name)" = "undefined"; then
	read -r -p "What is your name? " name
	npm config set init.author.name "$name"
fi
if test "$(npm config get init.author.email)" = "undefined"; then
	read -r -p "What is your email? " email
	npm config set init.author.email "$email"
fi
if test "$(npm config get init.author.url)" = "undefined"; then
	read -r -p "What is your url? " url
	npm config set init.author.url "$url"
fi
if test "$(npm config get init.license)" = "undefined"; then
	read -r -p "What license do you prefer? " license
	npm config set init.license "$license"
fi
