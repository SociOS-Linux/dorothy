#!/usr/bin/env bash
source "$HOME/.scripts/sources/splitlines.bash"
source "$HOME/.scripts/sources/var.bash"
source "$HOME/.scripts/sources/user.sh"
source "$HOME/.scripts/sources/strict.bash"

# Xcode
if is-dir "/Applications/Xcode.app/Contents/Developer/usr/bin"; then
	vadd PATH "/Applications/Xcode.app/Contents/Developer/usr/bin"
fi

# Others
if is-dir "/usr/local/bin"; then
	vadd PATH "/usr/local/bin"
fi
if is-dir "/usr/local/sbin"; then
	vadd PATH "/usr/local/sbin"
fi
if is-dir "/usr/local/man"; then
	vadd MANPATH "/usr/local/man"
fi

# Homebrew core
if is-dir "$HOME/.homebrew"; then
	vadd PATH "$HOME/.homebrew/bin"
	vadd MANPATH "$HOME/.homebrew/man"
fi

# Homebrew libs
if command-exists brew; then
	export BREW_PREFIX
	BREW_PREFIX="$(brew --prefix)"

	# Heroku
	if is-dir "$BREW_PREFIX/heroku/bin"; then
		vadd PATH "$BREW_PREFIX/heroku/bin"
	fi

	# Ruby & Gem
	if is-dir "$BREW_PREFIX/opt/ruby/bin"; then
		vadd PATH "$BREW_PREFIX/opt/ruby/bin"
	fi
	rubydirs="$(expand-path "$HOME/.gem/ruby/*/bin")"
	for rubydir in $rubydirs; do
		vadd PATH "$rubydir"
	done

	# icu4c (dependency of heroku)
	if is-dir "$BREW_PREFIX/opt/icu4c/bin"; then
		vadd PATH "$BREW_PREFIX/opt/icu4c/bin"
	fi
	if is-dir "$BREW_PREFIX/opt/icu4c/sbin"; then
		vadd PATH "$BREW_PREFIX/opt/icu4c/sbin"
	fi

	# Sphinx (dependency of ruby)
	if is-dir "$BREW_PREFIX/opt/sphinx-doc/bin"; then
		vadd PATH "$BREW_PREFIX/opt/sphinx-doc/bin"
	fi

	# GetText (dependency of gpg)
	if is-dir "$BREW_PREFIX/opt/gettext/bin"; then
		vadd PATH "$BREW_PREFIX/opt/gettext/bin"
	fi

	# Python
	if is-dir "$BREW_PREFIX/python/libexec/bin"; then
		vadd PATH "$BREW_PREFIX/python/libexec/bin"
	fi

	# SQLite (dependency of python)
	if is-dir "$BREW_PREFIX/opt/sqlite/bin"; then
		vadd PATH "$BREW_PREFIX/opt/sqlite/bin"
	fi

	# OpenSSL (dependency of python, gpg, and node)
	if is-dir "$BREW_PREFIX/opt/openssl/bin"; then
		vadd PATH "$BREW_PREFIX/opt/openssl/bin"
	fi

	# NSS
	if is-dir "$BREW_PREFIX/opt/nss/bin"; then
		vadd PATH "$BREW_PREFIX/opt/nss/bin"
	fi

	# Anaconda
	if is-dir "$BREW_PREFIX/anaconda3/bin"; then
		vadd PATH "$BREW_PREFIX/anaconda3/bin"
	fi
else
	# Ruby
	vset GEM_HOME "$HOME/.gem"
	vadd PATH "$HOME/.gem/bin"
fi

# NVM
if is-dir "$HOME/.nvm"; then
	vset NVM_DIR "$HOME/.nvm"
fi

# Go
if command-exists go; then
	export GOPATH
	GOPATH="$(go env GOPATH)"
	export GOROOT
	GOROOT="$(go env GOROOT)"
	export GOBIN
	GOBIN="$(go env GOBIN)"
	vset GOROOT "$GOROOT"
	vset GOPATH "$GOPATH"
	if is-empty-string "$GOBIN"; then
		GOBIN="$GOPATH/bin"
		vset GOBIN "$GOPATH/bin"
	fi
	if is-dir "$GOBIN"; then
		vadd PATH "$GOBIN"
	fi
	if is-dir "$GOROOT/bin"; then
		vadd PATH "$GOROOT/bin"
	fi
fi

# Java
vadd CLASSPATH "."

# Clojurescript
if is-dir "$HOME/.clojure/clojure-1.8"; then
	vadd PATH "$HOME/.clojure/clojure-1.8.0"
	vadd CLASSPATH "$HOME/.clojure/clojure-1.8.0"
fi

# Yarn
if command-exists yarn; then
	vadd PATH "$(yarn global bin)"
fi

# User
if is-dir "$HOME/.scripts/users/$(whoami)/commands"; then
	vadd PATH "$HOME/.scripts/users/$(whoami)/commands"
fi

# Local
if is-dir "$HOME/.bin"; then
	vadd PATH "$HOME/.bin"
fi
if is-dir "$HOME/bin"; then
	vadd PATH "$HOME/bin"
fi
