#!/usr/bin/env bash
source "$BDIR/sources/splitlines.bash"
source "$BDIR/sources/user.sh"
source "$BDIR/sources/strict.bash"

# Shell
lsh="${1:-}"

# Helpers
function vdel {
	if test "$lsh" = "fish"; then
		echo "set --erase $1;"
	else
		echo "export $1=\"\";"
	fi
}
function vadd {
	if test "$lsh" = "fish"; then
		echo "set --export --path --prepend $1 \"$2\";"
	else
		if test -z "${!1-}"; then
			echo "export $1=\"$2\";"
		else
			echo "export $1=\"$2:\$$1\";"
		fi
	fi
}
function vset {
	if test "$lsh" = "fish"; then
		echo "set --export $1 \"$2\";"
	else
		echo "export $1=\"$2\";"
	fi
}
# Reset
vdel PATH
vadd PATH "/bin"
if "$BDIR/commands/is-admin"; then
	vadd PATH "/sbin"
fi
vadd PATH "/usr/bin"
if "$BDIR/commands/is-admin"; then
	vadd PATH "/usr/sbin"
fi

# Xcode
if "$BDIR/commands/is-dir" "/Applications/Xcode.app/Contents/Developer/usr/bin"; then
	vadd PATH "/Applications/Xcode.app/Contents/Developer/usr/bin"
fi

# Others
if "$BDIR/commands/is-dir" "/usr/local/bin"; then
	vadd PATH "/usr/local/bin"
fi
if "$BDIR/commands/is-admin" && "$BDIR/commands/is-dir" "/usr/local/sbin"; then
	vadd PATH "/usr/local/sbin"
fi
if "$BDIR/commands/is-dir" "/usr/local/man"; then
	vadd MANPATH "/usr/local/man"
fi

# Homebrew core
if "$BDIR/commands/is-dir" "$HOME/.homebrew"; then
	vadd PATH "$HOME/.homebrew/bin"
	vadd MANPATH "$HOME/.homebrew/man"
fi

# Homebrew libs
if "$BDIR/commands/command-exists" brew; then
	export BREW_PREFIX; BREW_PREFIX="$(brew --prefix)"
	export BREW_CELLAR; BREW_CELLAR="$(brew --cellar)"

	# Heroku
	if "$BDIR/commands/is-dir" "$BREW_PREFIX/heroku/bin"; then
		vadd PATH "$BREW_PREFIX/heroku/bin"
	fi

	# Ruby & Gem
	if "$BDIR/commands/is-dir" "$BREW_PREFIX/opt/ruby/bin"; then
		vadd PATH "$BREW_PREFIX/opt/ruby/bin"
	fi
	rubydirs="$("$BDIR/commands/expand-path" "$HOME/.gem/ruby/*/bin")"
	for rubydir in $rubydirs; do
		vadd PATH "$rubydir"
	done

	# icu4c (dependency of heroku)
	if "$BDIR/commands/is-dir" "$BREW_PREFIX/opt/icu4c/bin"; then
		vadd PATH "$BREW_PREFIX/opt/icu4c/bin"
	fi
	if "$BDIR/commands/is-admin" && "$BDIR/commands/is-dir" "$BREW_PREFIX/opt/icu4c/sbin"; then
		vadd PATH "$BREW_PREFIX/opt/icu4c/sbin"
	fi

	# Sphinx (dependency of ruby)
	if "$BDIR/commands/is-dir" "$BREW_PREFIX/opt/sphinx-doc/bin"; then
		vadd PATH "$BREW_PREFIX/opt/sphinx-doc/bin"
	fi

	# GetText (dependency of gpg)
	if "$BDIR/commands/is-dir" "$BREW_PREFIX/opt/gettext/bin"; then
		vadd PATH "$BREW_PREFIX/opt/gettext/bin"
	fi

	# Python
	if "$BDIR/commands/is-dir" "$BREW_PREFIX/python/libexec/bin"; then
		vadd PATH "$BREW_PREFIX/python/libexec/bin"
	fi

	# Pip
	if "$BDIR/commands/is-dir" "$HOME/Library/Python/3.8/bin"; then
		vadd PATH "$HOME/Library/Python/3.8/bin"
	fi
	if "$BDIR/commands/is-dir" "$HOME/Library/Python/3.7/bin"; then
		vadd PATH "$HOME/Library/Python/3.7/bin"
	fi

	# SQLite (dependency of python)
	if "$BDIR/commands/is-dir" "$BREW_PREFIX/opt/sqlite/bin"; then
		vadd PATH "$BREW_PREFIX/opt/sqlite/bin"
	fi

	# OpenSSL (dependency of python, gpg, and node)
	if "$BDIR/commands/is-dir" "$BREW_PREFIX/opt/openssl/bin"; then
		vadd PATH "$BREW_PREFIX/opt/openssl/bin"
	fi

	# NSS
	if "$BDIR/commands/is-dir" "$BREW_PREFIX/opt/nss/bin"; then
		vadd PATH "$BREW_PREFIX/opt/nss/bin"
	fi

	# Anaconda
	if "$BDIR/commands/is-dir" "$BREW_PREFIX/anaconda3/bin"; then
		vadd PATH "$BREW_PREFIX/anaconda3/bin"
	fi
else
	# Ruby
	vset GEM_HOME "$HOME/.gem"
	if "$BDIR/commands/is-dir" "$HOME/.gem"; then
		for i in $(gem environment gempath | tr ":" "\n"); do
			vadd PATH "$i/bin"
		done
	fi
fi

# NVM
if "$BDIR/commands/is-dir" "$HOME/.nvm"; then
	vset NVM_DIR "$HOME/.nvm"
fi

# Rust
if "$BDIR/commands/is-dir" "$HOME/.cargo/bin"; then
	vadd PATH "$HOME/.cargo/bin"
fi

# Go
if "$BDIR/commands/command-exists" go; then
	# root: where go is installed
	export GOROOT; GOROOT="$(go env GOROOT || "$BDIR/commands/first-path" "$BREW_CELLAR/go")"
	if "$BDIR/commands/is-dir" "$GOROOT/libexec"; then
		GOROOT="$GOROOT/libexec"
	fi
	vset GOROOT "$GOROOT"

	# path: where modules are installed
	export GOPATH; GOPATH="$(go env GOPATH || "$BDIR/commands/echo-mkdirp" "$HOME/go")"
	vset GOPATH "$GOPATH"
	if "$BDIR/commands/is-dir" "$GOPATH/bin"; then
		vadd PATH "$GOPATH/bin"
	fi

	# bin: where the execs are
	export GOBIN; GOBIN="$(go env GOBIN || "$BDIR/commands/echo-dir" "$GOROOT/bin")"
	vset GOBIN "$GOBIN"
	vadd PATH "$GOBIN"
fi

# Java
vadd CLASSPATH "."

# Clojurescript
if "$BDIR/commands/is-dir" "$HOME/.clojure/clojure-1.8"; then
	vadd PATH "$HOME/.clojure/clojure-1.8.0"
	vadd CLASSPATH "$HOME/.clojure/clojure-1.8.0"
fi

# Yarn
if "$BDIR/commands/command-exists" yarn; then
	vadd PATH "$(yarn global bin)"
fi

# Flossbank
if "$BDIR/commands/is-dir" "$HOME/.flossbank/bin"; then
	vadd PATH "$HOME/.flossbank/bin"
fi

# Scripts
vadd PATH "$BDIR/commands"

# User
who="$(/usr/bin/whoami)"
if "$BDIR/commands/is-dir" "$BDIR/users/$who/commands"; then
	vadd PATH "$BDIR/users/$who/commands"
fi

# Local
if "$BDIR/commands/is-dir" "$HOME/.bin"; then
	vadd PATH "$HOME/.bin"
fi
if "$BDIR/commands/is-dir" "$HOME/bin"; then
	vadd PATH "$HOME/bin"
fi
