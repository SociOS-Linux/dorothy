#!/usr/bin/env bash
source "$HOME/.scripts/sources/array.bash"
source "$HOME/.scripts/sources/strict.bash"

# @note a lot of this isn't necessary thanks to the newer mac-state command

# @note to delete, use the following
# silent defaults delete com.apple.dock autohide

# @todo add more options using plistbuddy
# https://github.com/diessica/dotfiles/blob/2d5bd73aca984ae6afd40872e970b0d15692025c/misc/macos#L276-L293
# https://fgimian.github.io/blog/2015/06/27/a-simple-plistbuddy-tutorial/
# https://marcosantadev.com/manage-plist-files-plistbuddy/

# @todo add more options using applescript, e.g.
# sudo osascript -e 'tell application "System Events" to set require password to wake of security preferences to false'

# -------------------------------------
# Get Preferences

echo 'Which side to show the dock?'
dock_side="$(choose right left top bottom)"
defaults write com.apple.dock orientation "$dock_side"
echo ''

mapfile -t choices < <(
	read-choices \
		"Which settings would you like to enable?" \
		dockhide:"Automatically hide and show the dock?" \
		dockinstant:"Show the dock instantly?" \
		dockmin:"Minimise applications to their dock?" \
		docksmall:"Make the dock icons smaller?" \
		groupwin:"Group windows by apps in mission control?" \
		manualspaces:"Sort spaces manually instead of automatically?" \
		safarinopass:"Don't store password in Safari?" \
		safarinotrack:"Have Safari send do-not-track headers?" \
		safarifullurls:"Show full URLs in Safari?" \
		safarinoopen:"Disable automatically opening Safari downloads?" \
		safarinobar:"Hide Safari's bookmark bar?" \
		finderhome:"Set Finder home to your user directory?" \
		allextensions:"Show all file extensions?" \
		showhidden:"Show hidden files?" \
		hideextwarn:"Hide file extension change warning?" \
		showstatusbar:"Show Finder status bar?" \
		hidetrashwarn:"Hide empty trash warning?" \
		hidedesktop:"Hide desktop icons?" \
		darktheme:"Use dark theme?" \
		screenshotdir:"Save screenshots to ~/Desktop/Screenshots?" \
		disableautocorrect:"Disable autocorrect?" \
		alison:"Use Alison as the voiceover?" \
		ctrlzoom:"Use ctrl+scroll to zoom?" \
		updatedaily:"Check for software updates daily?" \
		devcrashes:"Show debug information when an application crashes?"
)


# -------------------------------------
# Dock

ok silent defaults delete com.apple.dock autohide-time-modifier

if in-array dockhide "${choices[@]}"; then
	defaults write com.apple.dock autohide -bool true
	if in-array dockinstant "${choices[@]}"; then
		defaults write com.apple.dock autohide-delay -float 0
	else
		defaults write com.apple.dock autohide-delay -float 1
	fi
else
	defaults write com.apple.dock autohide -bool false
fi

if in-array dockmin "${choices[@]}"; then
	defaults write com.apple.dock minimize-to-application -bool true
else
	defaults write com.apple.dock minimize-to-application -bool false
fi

if in-array docksmall "${choices[@]}"; then
	defaults write com.apple.dock tilesize -int 32
fi

if in-array groupwin "${choices[@]}"; then
	defaults write com.apple.dock expose-group-apps -bool true
else
	defaults write com.apple.dock expose-group-apps -bool false
fi

if in-array manualspaces "${choices[@]}"; then
	defaults write com.apple.dock mru-spaces -bool false
else
	defaults write com.apple.dock mru-spaces -bool true
fi

# -------------------------------------
# Safari

if in-array safarinopass "${choices[@]}"; then
	defaults write com.apple.Safari AutoFillPasswords -bool false
else
	defaults write com.apple.Safari AutoFillPasswords -bool true
fi

if in-array safarinotrack "${choices[@]}"; then
	defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true
else
	defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool false
fi

if in-array safarinohome "${choices[@]}"; then
	defaults write com.apple.Safari HomePage -string 'about:blank'
fi

if in-array safarifullurls "${choices[@]}"; then
	defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
else
	defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool false
fi

if in-array safarinoopen "${choices[@]}"; then
	defaults write com.apple.Safari AutoOpenSafeDownloads -bool false
else
	defaults write com.apple.Safari AutoOpenSafeDownloads -bool true
fi

if in-array safarinobar "${choices[@]}"; then
	defaults write com.apple.Safari ShowFavoritesBar-v2 -bool false
else
	defaults write com.apple.Safari ShowFavoritesBar-v2 -bool true
fi

# -------------------------------------
# Finder

if in-array finderhome "${choices[@]}"; then
	defaults write com.apple.finder NewWindowTargetPath "file://$HOME"
fi

# https://software.com/mac/tweaks/show-file-extensions-in-finder
if in-array allextensions "${choices[@]}"; then
	defaults write NSGlobalDomain AppleShowAllExtensions -bool true
else
	defaults write NSGlobalDomain AppleShowAllExtensions -bool false
fi

# https://software.com/mac/tweaks/show-all-files-in-finder
if in-array showhidden "${choices[@]}"; then
	defaults write com.apple.finder AppleShowAllFiles -bool true
else
	defaults write com.apple.finder AppleShowAllFiles -bool false
fi

# http://osxdaily.com/2012/04/11/disable-the-file-extension-change-warning-in-mac-os-x/
if in-array hideextwarn "${choices[@]}"; then
	defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
else
	defaults write com.apple.finder FXEnableExtensionChangeWarning -bool true
fi

if in-array showstatusbar "${choices[@]}"; then
	defaults write com.apple.finder ShowStatusBar -bool false
else
	defaults write com.apple.finder ShowStatusBar -bool true
fi

if in-array hidetrashwarn "${choices[@]}"; then
	defaults write com.apple.finder WarnOnEmptyTrash -bool false
else
	defaults write com.apple.finder WarnOnEmptyTrash -bool true
fi

# https://software.com/mac/tweaks/hide-desktop-icons
if in-array hidedesktop "${choices[@]}"; then
	defaults write com.apple.finder CreateDesktop -bool false
	defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false
	defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
	defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
	defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
else
	defaults write com.apple.finder CreateDesktop -bool true
	defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true
	defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
	defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
	defaults write com.apple.finder ShowMountedServersOnDesktop -bool true

fi

# -------------------------------------
# Global

if in-array darktheme "${choices[@]}"; then
	defaults write ~/Library/Preferences/.GlobalPreferences AppleInterfaceStyle Dark
fi

if in-array screenshotdir "${choices[@]}"; then
	mkdir -p "$HOME/Desktop/Screenshots"
	defaults write com.apple.screencapture location "$HOME/Desktop/Screenshots"
fi

if in-array disableautocorrect "${choices[@]}"; then
	defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
else
	defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool true
fi

if in-array alison "${choices[@]}"; then
	defaults write com.apple.speech.voice.prefs SelectedVoiceName -string 'Alison'
fi

# not working in mojave for some reason
# if in-array ctrlzoom "${choices[@]}"; then
# 	defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
# fi

if in-array updatedaily "${choices[@]}"; then
	defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1
fi

# https://en.wikipedia.org/wiki/Apple_Developer_Tools#CrashReporterPrefs
if in-array devcrashes "${choices[@]}"; then
	defaults write com.apple.CrashReporter DialogType -string 'developer'
fi

# -------------------------------------
# Reset

killall SystemUIServer
killall Finder
killall Dock