#!/usr/bin/env bash
set -e

# @note a lot of this isn't necessary thanks to the newer macup command

# @note to delete, use the following
# silent defaults delete com.apple.dock autohide

# @todo add more options using plistbuddy
# https://github.com/diessica/dotfiles/blob/2d5bd73aca984ae6afd40872e970b0d15692025c/misc/macos#L276-L293
# https://fgimian.github.io/blog/2015/06/27/a-simple-plistbuddy-tutorial/
# https://marcosantadev.com/manage-plist-files-plistbuddy/

# @todo add more options using applescript, e.g.
# sudo osascript -e 'tell application "System Events" to set require password to wake of security preferences to false'

# -------------------------------------
# Dock

echo 'Which side to show the dock?'
dock_side="$(choose right left top bottom)"
defaults write com.apple.dock orientation "$dock_side"
echo ''

if confirm_positive "Automatically hide and show the dock?"; then
	defaults write com.apple.dock autohide -bool true
else
	defaults write com.apple.dock autohide -bool false
fi

if confirm_negative "Hide the dock completely?"; then
	defaults write com.apple.dock autohide-delay -float 5
else
	defaults delete com.apple.dock autohide-time-modifier
fi

if confirm_positive "Minimise applications to their dock icons?"; then
	defaults write com.apple.dock minimize-to-application -bool true
else
	defaults write com.apple.dock minimize-to-application -bool false
fi

if confirm_positive "Make the dock icons smaller?"; then
	defaults write com.apple.dock tilesize -int 32
fi

if confirm_positive "Group windows by apps in mission control?"; then
	defaults write com.apple.dock expose-group-apps -bool true
else
	defaults write com.apple.dock expose-group-apps -bool false
fi

if confirm_negative "Automatically order spaces by recently used in mission control?"; then
	defaults write com.apple.dock mru-spaces -bool false
else
	defaults write com.apple.dock mru-spaces -bool true
fi

# -------------------------------------
# Safari

if confirm_positive "Don't store passwords in Safari?"; then
	defaults write com.apple.Safari AutoFillPasswords -bool false
else
	defaults write com.apple.Safari AutoFillPasswords -bool true
fi

if confirm_positive "Have Safari send do-not-track headers?"; then
	defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true
else
	defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool false
fi

if confirm_positive "Disable Safari homepage?"; then
	defaults write com.apple.Safari HomePage -string 'about:blank'
fi

if confirm_positive "Show full URLs in Safari?"; then
	defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
else
	defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool false
fi

if confirm_positive "Disable automatically opening Safari downloads?"; then
	defaults write com.apple.Safari AutoOpenSafeDownloads -bool false
else
	defaults write com.apple.Safari AutoOpenSafeDownloads -bool true
fi

if confirm_positive "Hide Safari's bookmarks bar?"; then
	defaults write com.apple.Safari ShowFavoritesBar-v2 -bool false
else
	defaults write com.apple.Safari ShowFavoritesBar-v2 -bool true
fi

# -------------------------------------
# Finder

if confirm_positive "Set Finder home to your user directory?"; then
	defaults write com.apple.finder NewWindowTargetPath "file://$HOME"
fi

# https://software.com/mac/tweaks/show-file-extensions-in-finder
if confirm_positive "Show all file extensions?"; then
	defaults write NSGlobalDomain AppleShowAllExtensions -bool true
else
	defaults write NSGlobalDomain AppleShowAllExtensions -bool false
fi

# https://software.com/mac/tweaks/show-all-files-in-finder
if confirm_positive "Show hidden files?"; then
	defaults write com.apple.finder AppleShowAllFiles -bool true
else
	defaults write com.apple.finder AppleShowAllFiles -bool false
fi

# http://osxdaily.com/2012/04/11/disable-the-file-extension-change-warning-in-mac-os-x/
if confirm_negative "Confirm file extension changes?"; then
	defaults write com.apple.finder FXEnableExtensionChangeWarning -bool true
else
	defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
fi

if confirm_positive "Show Finder status bar?"; then
	defaults write com.apple.finder ShowStatusBar -bool false
else
	defaults write com.apple.finder ShowStatusBar -bool true
fi

if confirm_negative "Confirm emptying the trash?"; then
	defaults write com.apple.finder WarnOnEmptyTrash -bool true
else
	defaults write com.apple.finder WarnOnEmptyTrash -bool false
fi

# https://software.com/mac/tweaks/hide-desktop-icons
if confirm_positive "Hide desktop icons?"; then
	defaults write com.apple.finder CreateDesktop -bool false
	defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false
	defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
	defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
	defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
else
	defaults write com.apple.finder CreateDesktop -bool true
	defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true
	defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
	defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
	defaults write com.apple.finder ShowMountedServersOnDesktop -bool true

fi

# -------------------------------------
# Global

if confirm_positive "Use dark theme?"; then
	defaults write ~/Library/Preferences/.GlobalPreferences AppleInterfaceStyle Dark
fi

if confirm_positive "Save screenshots to ~/Desktop/Screenshots?"; then
	mkdir -p "$HOME/Desktop/Screenshots"
	defaults write com.apple.screencapture location "$HOME/Desktop/Screenshots"
fi

if confirm_positive "Disable auto-correct?"; then
	defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
else
	defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool true
fi

if confirm_positive "Use Alison as the voiceover?"; then
	defaults write com.apple.speech.voice.prefs SelectedVoiceName -string 'Alison'
fi


if confirm_positive "Enable ctrl+scroll to zoom?"; then
	defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
fi

if confirm_positive "Check for software updates daily?"; then
	defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1
fi

# https://en.wikipedia.org/wiki/Apple_Developer_Tools#CrashReporterPrefs
if confirm_positive "Show more debug information when application crashes?"; then
	defaults write com.apple.CrashReporter DialogType -string 'developer'
fi

# -------------------------------------
# Reset

killall SystemUIServer
killall Finder
killall Dock