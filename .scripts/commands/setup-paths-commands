#!/usr/bin/env bash
source "$HOME/.scripts/sources/var.bash"
source "$HOME/.scripts/sources/user.sh"
set -e

# Xcode
if is_dir "/Applications/Xcode.app/Contents/Developer/usr/bin"; then
	vadd PATH "/Applications/Xcode.app/Contents/Developer/usr/bin"
fi

# Others
if is_dir "/usr/local/bin"; then
	vadd PATH "/usr/local/bin"
fi
if is_dir "/usr/local/sbin"; then
	vadd PATH "/usr/local/sbin"
fi
if is_dir "/usr/local/man"; then
	vadd MANPATH "/usr/local/man"
fi

# Homebrew core
if is_dir "$HOME/.homebrew"; then
	vadd PATH "$HOME/.homebrew/bin"
	vadd MANPATH "$HOME/.homebrew/man"
fi

# Homebrew libs
if command_exists brew; then
	export BREW_PREFIX; BREW_PREFIX=$(brew --prefix)

	# Heroku
	if is_dir "$BREW_PREFIX/heroku/bin"; then
		vadd PATH "$BREW_PREFIX/heroku/bin"
	fi

	# Ruby & Gem
	# we avoid complex setups due to:
	# https://github.com/ffi/ffi/issues/631
	if command_exists ruby; then
		rubydir="$(expandpath "$HOME/.gem/ruby/*/bin")"
		if is_dir "$rubydir"; then
			vadd PATH "$rubydir"
		fi
	fi
	# if is_string "$RUBY_VERSION" && is_dir "$BREW_PREFIX/opt/$RUBY_VERSION/bin"; then
	# 	vadd PATH "$BREW_PREFIX/opt/$RUBY_VERSION/bin"
	# 	vset LDFLAGS "-L$BREW_PREFIX/opt/$RUBY_VERSION/lib"
	# 	vset CPPFLAGS "-I$BREW_PREFIX/opt/$RUBY_VERSION/include"
	# 	vset PKG_CONFIG_PATH "$BREW_PREFIX/opt/$RUBY_VERSION/lib/pkgconfig"
	# fi
	# if is_dir "$BREW_PREFIX/opt/ruby/bin"; then
	# 	vadd PATH "$BREW_PREFIX/opt/ruby/bin"
	# 	vset LDFLAGS "-L$BREW_PREFIX/opt/ruby/lib"
	# 	vset CPPFLAGS "-I$BREW_PREFIX/opt/ruby/include"
	# 	vset PKG_CONFIG_PATH "$BREW_PREFIX/opt/ruby/lib/pkgconfig"
	# fi
	# if command_exists ruby; then
	# 	if is_empty_string "$GEM_HOME"; then
	# 		export GEM_HOME="$HOME/.gems"
	# 		vset GEM_HOME "$GEM_HOME"
	# 	fi
	# 	if is_dir "$GEM_HOME/bin"; then
	# 		vadd PATH "$GEM_HOME/bin"
	# 	fi
	# fi

	# icu4c (dependency of heroku)
	if is_dir "$BREW_PREFIX/opt/icu4c/bin"; then
		vadd PATH "$BREW_PREFIX/opt/icu4c/bin"
	fi
	if is_dir "$BREW_PREFIX/opt/icu4c/sbin"; then
		vadd PATH "$BREW_PREFIX/opt/icu4c/sbin"
	fi

	# Sphinx (dependency of ruby)
	if is_dir "$BREW_PREFIX/opt/sphinx-doc/bin"; then
		vadd PATH "$BREW_PREFIX/opt/sphinx-doc/bin"
	fi

	# GetText (dependency of gpg)
	if is_dir "$BREW_PREFIX/opt/gettext/bin"; then
		vadd PATH "$BREW_PREFIX/opt/gettext/bin"
	fi

	# Python
	if is_dir "$BREW_PREFIX/python/libexec/bin"; then
		vadd PATH "$BREW_PREFIX/python/libexec/bin"
	fi

	# SQLite (dependency of python)
	if is_dir "$BREW_PREFIX/opt/sqlite/bin"; then
		vadd PATH "$BREW_PREFIX/opt/sqlite/bin"
	fi

	# OpenSSL (dependency of python, gpg, and node)
	if is_dir "$BREW_PREFIX/opt/openssl/bin"; then
		vadd PATH "$BREW_PREFIX/opt/openssl/bin"
	fi

	# NSS
	if is_dir "$BREW_PREFIX/opt/nss/bin"; then
		vadd PATH "$BREW_PREFIX/opt/nss/bin"
	fi

	# Anaconda
	if is_dir "$BREW_PREFIX/anaconda3/bin"; then
		vadd PATH "$BREW_PREFIX/anaconda3/bin"
	fi
fi

# NVM
if is_dir "$HOME/.nvm"; then
	vset NVM_DIR "$HOME/.nvm"
fi

# Go
if command_exists go; then
	export GOPATH; GOPATH="$(go env GOPATH)"
	vset GOPATH "$GOPATH"
	if is_dir "$GOPATH/bin"; then
		vadd PATH "$GOPATH/bin"
	fi
	if is_dir "$BREW_PREFIX/opt/go/libexec/bin"; then
		vadd PATH "$BREW_PREFIX/opt/go/libexec/bin"
	fi
fi

# Java
vadd CLASSPATH "."

# Clojurescript
if is_dir "$HOME/.clojure/clojure-1.8"; then
	vadd PATH "$HOME/.clojure/clojure-1.8.0"
	vadd CLASSPATH "$HOME/.clojure/clojure-1.8.0"
fi

# Yarn
if command_exists yarn; then
	vadd PATH "$(yarn global bin)"
fi

# Local
if is_dir "$HOME/.bin"; then
	vadd PATH "$HOME/.bin"
fi
if is_dir "$HOME/bin"; then
	vadd PATH "$HOME/bin"
fi
